<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 <mapper namespace="com.nexgrid.adcb.api.refund.dao.RefundDAO">
 	
 
 	<!-- 환불 API 요청 중복 체크-->
 	<select id="reqDuplicateCheck" parameterType="java.util.Map" resultType="java.util.Map">
 		SELECT
 			REQUEST_ID,
 			ISSUER_REFUNDID, 
 			RESULT_MSG, 
 			RESULT,
 			HTTP_STATUS
		FROM 
			TB_REFUND_INFO
		WHERE 
			INIT_DATE IN (#{current_month}, #{last_month}) 
		    AND REQUEST_ID = #{requestId}
 	</select>
 	
 	
 	
 	<!-- BOKU의 환불 API 최초 요청 데이터 INSERT -->
 	<insert id="insertRefundReq">
 		INSERT INTO TB_REFUND_INFO (
	 		REQUEST_ID,
	        CLIENT_REFUNDID,
	        ISSUER_PAYMENTID,
	        AMOUNT,
	        REFUND_REASON,
         	MERCHANT_ID
         	)
	     VALUES (
	     	#{param.requestId},
			#{param.clientRefundId},
			#{param.issuerPaymentId},
			#{param.refundAmount.amount},
			#{param.refundReason},
			#{param.merchantId}
			)
 	</insert>
 		
 		
	
	<!-- 환불 완료 또는 실패 정보 UPDATE -->
	<update id="updateRefundInfo">
		UPDATE
			TB_REFUND_INFO
		SET 
			HTTP_STATUS = #{param.HTTP_STATUS},
			REFUND_DT = #{param.REFUND_DT},
			RESULT = #{param.bokuRes.result.reasonCode},
			<choose>
				<when test="param.Res_116 != null"> <!-- 차감취소 -->
					BR_ID = #{param.Res_116.BR_ID},
				</when>
				<otherwise> <!-- 부분취소 -->
					BR_ID = #{param.Res_117.BR_ID}, 
				</otherwise>
			</choose>
			
			ISSUER_REFUNDID = #{param.bokuRes.issuerRefundId},
			RESULT_MSG = #{param.bokuRes.result.message}
		WHERE
			INIT_DATE IN (#{param.current_month}, #{param.last_month})
			AND REQUEST_ID = #{param.requestId}
	</update>
	
	
	

 	
 </mapper>